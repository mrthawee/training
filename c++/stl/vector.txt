/*
 * STL: Standard Template Library
 *   -- Data Structures and Algorithms
 *
 * Reasons to use C++ standard library:
 * 1. Code reuse, no need to re-invent the wheel.
 * 2. Efficiency (fast and use less resources). Modern C++ compiler are
 *    usually tuned to optimize for C++ standard library code.
 * 3. Accurate, less buggy
 * 4. Terse, readable code; reduced control flow.
 * 5. Standardization, guaranteed availability
 * 6. A role model of writing library
 * 7. Good knowledge of data structures and algorithms.
 */

// First Example:
using namespace std;

vector<int> vec;
vec.push_back(4);
vec.push_back(1);
vec.push_back(8); // vec: { 4, 1, 8 }

vector<int>::iterator itr1 = vec.begin();  // half-open: [begin, end)
vector<int>::iterator itr2 = vec.end()  // cout << *vec.end(); -> invalid!

for (vector<int>::iterator itr = itr1; itr != itr2; ++itr)
   cout << *itr << " "; // Print out: 4 1 8

sort(itr1, itr2);  // vec: { 1, 4, 8 } by algorithm sort()
